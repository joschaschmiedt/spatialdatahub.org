language:
  - python

python:
  - "3.6"

env:
  global:
    - SECRET_KEY=secret
    - CRYPTO_KEY="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQ="

#this stuff is being done with docker containers below
# except for the postgres thing
#install:
#  - "pip3 install -r requirements.txt"
#before_script:
#  - psql -c 'create database travis_ci_test;' -U postgres
#script:
#  - "python manage.py makemigrations --settings=main.settings.dev"
#  - "python manage.py migrate --settings=main.settings.dev"
#  - "python manage.py test test.unit_tests --settings=main.settings.dev"

sudo: required

services:
  - docker

# run the tests from the docker container. Be sure to provide the necessary environmental variables
# this should probably be written better, but it works like this now.
script:
  - docker build -t django-app .
  - docker run -e SECRET_KEY -e CRYPTOKEY django-app ./manage.py makemigrations --settings=main.settings.dev 
  - docker run -e SECRET_KEY -e CRYPTOKEY django-app ./manage.py migrate --settings=main.settings.dev 
  - docker run -e SECRET_KEY -e CRYPTOKEY django-app ./manage.py test test.unit_tests --settings=main.settings.dev 

# presumably deployment will not work if the tests fail...
after_deploy:
  -echo "done deploying"

#deploy:
#  provider: elasticbeanstalk
#  access_key_id: $ACCESSKEYID
#  secret_access_key:
#    secure: "$SECRETACCESSKEY"
#  region: "eu-central-1"  
#  app: "spatialdatahub"
#  env: "spatialdatahub-dev"
#  bucket_name: "elasticbeanstalk-eu-central-1-707675293479"
#  on:
#    branch: master