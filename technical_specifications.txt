ZMT GIS Web Portal Technical Specifications


AUTHOR

Patrick Curry


CREATED

2016-05-04


UPDATED

2016-05-09


DISCLAIMER

This document is incomplete and will need to be revisited many times before it is complete.


OVERVIEW

This is the document that contains the technical specifications for the ZMT GIS Web Portal project. It's sister document "functional_specifications.txt" contains the project's functional specifications.

The ZMT GIS Web Portal is a website that will allow the visualization of spatial data collected by the ZMT and other sources in a single location. Users will be able to view GIS maps populated with real time data (e.g. weather data, wave data, etc.). --> More to be added


SOFTWARE

  LANGUAGES TO BE USED

    Python 3
    Javascript
    css
    html

  FRAMEWORKS

    Django 1.9
      -The plan is to continually upgrade the version to stay current. 1.10 in August 2016, 1.11 LTS (long-term support) in April 2017, and 2.0 in December 2017

    Bootstrap 3
      -Once version 4 is out and available we will try and move to it.

    jQuery

  PACKAGES

    POSTGRES
      -PostGIS extension for the relational database.

    DJANGO
      -Django Rest Framework
      -django-rest-framework-gis
      -psycopg2 - the django package for Postgres

  SERVERS

    This will all be put onto a virtual server that is at the ZMT, but to run python on the server we will be using Gunicorn, and to serve the static files we will use NGINX.


OPEN ISSUES

This project may require something special for the underlying database. I know how to hook Django up to a Postgres database, but I don't quite know how to hook it up to a database that is based on Arc software or something like that. <-- I will start with a Postgres database, then see what I can figure out from there.


SIDE NOTES




PAGES/URLS

Index -> '/'


 

Map List -> '/map_list/'




Map Page -> '/map/'

Selecting the gis map to use will be tricky; they can each be entered as a model in the database, which seems to be the standard way, or we can do something else. This is difficult because it means that each gis map will be a model in the database. This may just be the way that things go though.

The map manipulation and points will be taken care of with javascript.



Shape File Meta Data Page

  '/map/<gis_map_slug>/meta/' 


GIS Object Meta Data Page

  '/map/<gis_map_slug>/<gis_object_id>/meta/'


About Page

  '/about/'


Contact Page

  '/contact/'

Login 

  '/login/'

Logout 

  '/logout/'

Reset Password

  '/reset-password/'


